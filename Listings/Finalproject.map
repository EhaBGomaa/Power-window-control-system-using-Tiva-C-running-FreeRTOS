Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.ARM.exidx.text.GPIODirModeSet) refers to main.o(.text.GPIODirModeSet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIODirModeGet) refers to main.o(.text.GPIODirModeGet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntTypeSet) refers to main.o(.text.GPIOIntTypeSet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntTypeGet) refers to main.o(.text.GPIOIntTypeGet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPadConfigSet) refers to main.o(.text.GPIOPadConfigSet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPadConfigGet) refers to main.o(.text.GPIOPadConfigGet) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntEnable) refers to main.o(.text.GPIOIntEnable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntDisable) refers to main.o(.text.GPIOIntDisable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntStatus) refers to main.o(.text.GPIOIntStatus) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOIntClear) refers to main.o(.text.GPIOIntClear) for [Anonymous Symbol]
    main.o(.text.GPIOIntRegister) refers to main.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    main.o(.text.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    main.o(.text.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    main.o(.ARM.exidx.text.GPIOIntRegister) refers to main.o(.text.GPIOIntRegister) for [Anonymous Symbol]
    main.o(.text._GPIOIntNumberGet) refers to main.o(.rodata.g_ppui32GPIOIntMapBlizzard) for g_ppui32GPIOIntMapBlizzard
    main.o(.text._GPIOIntNumberGet) refers to main.o(.rodata.g_ppui32GPIOIntMapSnowflake) for g_ppui32GPIOIntMapSnowflake
    main.o(.ARM.exidx.text._GPIOIntNumberGet) refers to main.o(.text._GPIOIntNumberGet) for [Anonymous Symbol]
    main.o(.text.GPIOIntUnregister) refers to main.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    main.o(.text.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    main.o(.text.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    main.o(.ARM.exidx.text.GPIOIntUnregister) refers to main.o(.text.GPIOIntUnregister) for [Anonymous Symbol]
    main.o(.text.GPIOIntRegisterPin) refers to main.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    main.o(.text.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    main.o(.text.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    main.o(.ARM.exidx.text.GPIOIntRegisterPin) refers to main.o(.text.GPIOIntRegisterPin) for [Anonymous Symbol]
    main.o(.text.GPIOIntUnregisterPin) refers to main.o(.text._GPIOIntNumberGet) for _GPIOIntNumberGet
    main.o(.text.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    main.o(.text.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    main.o(.ARM.exidx.text.GPIOIntUnregisterPin) refers to main.o(.text.GPIOIntUnregisterPin) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPinRead) refers to main.o(.text.GPIOPinRead) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPinWrite) refers to main.o(.text.GPIOPinWrite) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeADC) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeADC) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeADC) refers to main.o(.text.GPIOPinTypeADC) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeCAN) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeCAN) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeCAN) refers to main.o(.text.GPIOPinTypeCAN) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeComparator) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeComparator) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeComparator) refers to main.o(.text.GPIOPinTypeComparator) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeComparatorOutput) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeComparatorOutput) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeComparatorOutput) refers to main.o(.text.GPIOPinTypeComparatorOutput) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeDIVSCLK) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeDIVSCLK) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeDIVSCLK) refers to main.o(.text.GPIOPinTypeDIVSCLK) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeEPI) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeEPI) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeEPI) refers to main.o(.text.GPIOPinTypeEPI) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeEthernetLED) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeEthernetLED) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeEthernetLED) refers to main.o(.text.GPIOPinTypeEthernetLED) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeEthernetMII) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeEthernetMII) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeEthernetMII) refers to main.o(.text.GPIOPinTypeEthernetMII) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeGPIOInput) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeGPIOInput) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeGPIOInput) refers to main.o(.text.GPIOPinTypeGPIOInput) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeGPIOOutput) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.text.GPIOPinTypeGPIOOutput) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.ARM.exidx.text.GPIOPinTypeGPIOOutput) refers to main.o(.text.GPIOPinTypeGPIOOutput) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeGPIOOutputOD) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.text.GPIOPinTypeGPIOOutputOD) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.ARM.exidx.text.GPIOPinTypeGPIOOutputOD) refers to main.o(.text.GPIOPinTypeGPIOOutputOD) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeHibernateRTCCLK) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeHibernateRTCCLK) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeHibernateRTCCLK) refers to main.o(.text.GPIOPinTypeHibernateRTCCLK) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeI2C) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeI2C) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeI2C) refers to main.o(.text.GPIOPinTypeI2C) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeI2CSCL) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeI2CSCL) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeI2CSCL) refers to main.o(.text.GPIOPinTypeI2CSCL) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeLCD) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeLCD) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeLCD) refers to main.o(.text.GPIOPinTypeLCD) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeOneWire) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeOneWire) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeOneWire) refers to main.o(.text.GPIOPinTypeOneWire) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypePWM) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypePWM) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypePWM) refers to main.o(.text.GPIOPinTypePWM) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeQEI) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeQEI) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeQEI) refers to main.o(.text.GPIOPinTypeQEI) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeSSI) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeSSI) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeSSI) refers to main.o(.text.GPIOPinTypeSSI) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeTimer) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeTimer) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeTimer) refers to main.o(.text.GPIOPinTypeTimer) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeTrace) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeTrace) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeTrace) refers to main.o(.text.GPIOPinTypeTrace) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeUART) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeUART) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeUART) refers to main.o(.text.GPIOPinTypeUART) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeUSBAnalog) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeUSBAnalog) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeUSBAnalog) refers to main.o(.text.GPIOPinTypeUSBAnalog) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeUSBDigital) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeUSBDigital) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeUSBDigital) refers to main.o(.text.GPIOPinTypeUSBDigital) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeWakeHigh) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeWakeHigh) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeWakeHigh) refers to main.o(.text.GPIOPinTypeWakeHigh) for [Anonymous Symbol]
    main.o(.text.GPIOPinTypeWakeLow) refers to main.o(.text.GPIODirModeSet) for GPIODirModeSet
    main.o(.text.GPIOPinTypeWakeLow) refers to main.o(.text.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.ARM.exidx.text.GPIOPinTypeWakeLow) refers to main.o(.text.GPIOPinTypeWakeLow) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOPinWakeStatus) refers to main.o(.text.GPIOPinWakeStatus) for [Anonymous Symbol]
    main.o(.text.GPIOPinConfigure) refers to main.o(.rodata.g_pui32GPIOBaseAddrs) for g_pui32GPIOBaseAddrs
    main.o(.ARM.exidx.text.GPIOPinConfigure) refers to main.o(.text.GPIOPinConfigure) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIODMATriggerEnable) refers to main.o(.text.GPIODMATriggerEnable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIODMATriggerDisable) refers to main.o(.text.GPIODMATriggerDisable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOADCTriggerEnable) refers to main.o(.text.GPIOADCTriggerEnable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.GPIOADCTriggerDisable) refers to main.o(.text.GPIOADCTriggerDisable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.delayMS) refers to main.o(.text.delayMS) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.initStructs) for initStructs
    main.o(.text.main) refers to main.o(.text.init) for init
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.lockSemaphore) for lockSemaphore
    main.o(.text.main) refers to main.o(.bss.jamSemaphore) for jamSemaphore
    main.o(.text.main) refers to main.o(.bss.autoModeSemaphore) for autoModeSemaphore
    main.o(.text.main) refers to main.o(.text.CheckButtons) for CheckButtons
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.jamHandler) for jamHandler
    main.o(.text.main) refers to main.o(.text.autoModeHandler) for autoModeHandler
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.initStructs) refers to main.o(.bss.CarWindow) for CarWindow
    main.o(.text.initStructs) refers to main.o(.bss.initStructs.driverUpButton) for initStructs.driverUpButton
    main.o(.text.initStructs) refers to main.o(.bss.initStructs.driverDownButton) for initStructs.driverDownButton
    main.o(.text.initStructs) refers to main.o(.bss.initStructs.passengerUpButton) for initStructs.passengerUpButton
    main.o(.text.initStructs) refers to main.o(.bss.initStructs.passengerDownButton) for initStructs.passengerDownButton
    main.o(.text.initStructs) refers to main.o(.bss.PortC_Buttons) for PortC_Buttons
    main.o(.ARM.exidx.text.initStructs) refers to main.o(.text.initStructs) for [Anonymous Symbol]
    main.o(.text.init) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.init) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    main.o(.text.init) refers to main.o(.text.GPIOPinTypeGPIOInput) for GPIOPinTypeGPIOInput
    main.o(.text.init) refers to main.o(.text.autoModeInterrupt) for autoModeInterrupt
    main.o(.text.init) refers to main.o(.text.GPIOIntRegister) for GPIOIntRegister
    main.o(.text.init) refers to main.o(.text.GPIOIntTypeSet) for GPIOIntTypeSet
    main.o(.text.init) refers to main.o(.text.GPIOIntEnable) for GPIOIntEnable
    main.o(.text.init) refers to main.o(.text.jamInterrupt) for jamInterrupt
    main.o(.text.init) refers to main.o(.text.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    main.o(.text.init) refers to interrupt.o(i.IntMasterEnable) for IntMasterEnable
    main.o(.text.init) refers to interrupt.o(i.IntEnable) for IntEnable
    main.o(.text.init) refers to interrupt.o(i.IntPrioritySet) for IntPrioritySet
    main.o(.ARM.exidx.text.init) refers to main.o(.text.init) for [Anonymous Symbol]
    main.o(.text.CheckButtons) refers to main.o(.bss.CarWindow) for CarWindow
    main.o(.text.CheckButtons) refers to main.o(.bss.PortC_Buttons) for PortC_Buttons
    main.o(.text.CheckButtons) refers to main.o(.text.moveWindow) for moveWindow
    main.o(.text.CheckButtons) refers to main.o(.text.stopWindow) for stopWindow
    main.o(.text.CheckButtons) refers to main.o(.text.limitSwitchHandler) for limitSwitchHandler
    main.o(.ARM.exidx.text.CheckButtons) refers to main.o(.text.CheckButtons) for [Anonymous Symbol]
    main.o(.text.jamHandler) refers to main.o(.bss.jamSemaphore) for jamSemaphore
    main.o(.text.jamHandler) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.jamHandler) refers to main.o(.bss.CarWindow) for CarWindow
    main.o(.text.jamHandler) refers to main.o(.text.delayMS) for delayMS
    main.o(.ARM.exidx.text.jamHandler) refers to main.o(.text.jamHandler) for [Anonymous Symbol]
    main.o(.text.autoModeHandler) refers to main.o(.bss.autoModeSemaphore) for autoModeSemaphore
    main.o(.text.autoModeHandler) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.autoModeHandler) refers to main.o(.bss.CarWindow) for CarWindow
    main.o(.ARM.exidx.text.autoModeHandler) refers to main.o(.text.autoModeHandler) for [Anonymous Symbol]
    main.o(.text.moveWindow) refers to main.o(.text.hasPermission) for hasPermission
    main.o(.text.moveWindow) refers to main.o(.bss.CarWindow) for CarWindow
    main.o(.text.moveWindow) refers to main.o(.text.limitSwitchHandler) for limitSwitchHandler
    main.o(.text.moveWindow) refers to main.o(.text.checkAutoDown) for checkAutoDown
    main.o(.text.moveWindow) refers to main.o(.text.checkAutoUp) for checkAutoUp
    main.o(.ARM.exidx.text.moveWindow) refers to main.o(.text.moveWindow) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.stopWindow) refers to main.o(.text.stopWindow) for [Anonymous Symbol]
    main.o(.text.limitSwitchHandler) refers to main.o(.bss.CarWindow) for CarWindow
    main.o(.ARM.exidx.text.limitSwitchHandler) refers to main.o(.text.limitSwitchHandler) for [Anonymous Symbol]
    main.o(.text.jamInterrupt) refers to main.o(.text.GPIOIntClear) for GPIOIntClear
    main.o(.text.jamInterrupt) refers to main.o(.bss.jamSemaphore) for jamSemaphore
    main.o(.text.jamInterrupt) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.ARM.exidx.text.jamInterrupt) refers to main.o(.text.jamInterrupt) for [Anonymous Symbol]
    main.o(.text.autoModeInterrupt) refers to main.o(.text.GPIOIntClear) for GPIOIntClear
    main.o(.text.autoModeInterrupt) refers to main.o(.bss.autoModeSemaphore) for autoModeSemaphore
    main.o(.text.autoModeInterrupt) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.ARM.exidx.text.autoModeInterrupt) refers to main.o(.text.autoModeInterrupt) for [Anonymous Symbol]
    main.o(.text.hasPermission) refers to main.o(.bss.CarWindow) for CarWindow
    main.o(.ARM.exidx.text.hasPermission) refers to main.o(.text.hasPermission) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.checkAutoUp) refers to main.o(.text.checkAutoUp) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.checkAutoDown) refers to main.o(.text.checkAutoDown) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSetupTimerInterrupt) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.xMaximumPossibleSuppressedTicks) for xMaximumPossibleSuppressedTicks
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for eTaskConfirmSleepModeStatus
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulTimerCountsForOneTick) for ulTimerCountsForOneTick
    port.o(.text.vPortSuppressTicksAndSleep) refers to port.o(.bss.ulStoppedTimerCompensation) for ulStoppedTimerCompensation
    port.o(.text.vPortSuppressTicksAndSleep) refers to tasks.o(.text.vTaskStepTick) for vTaskStepTick
    port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep) refers to port.o(.text.vPortSuppressTicksAndSleep) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortSuppressTicksAndSleep) for vPortSuppressTicksAndSleep
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskGetHandle) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGetHandle) refers to tasks.o(.text.xTaskGetHandle) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList) refers to tasks.o(.text.prvSearchForNameWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetIdleTaskHandle) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle) refers to tasks.o(.text.xTaskGetIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskStepTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskStepTick) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskStepTick) refers to tasks.o(.text.vTaskStepTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus) refers to tasks.o(.text.eTaskConfirmSleepModeStatus) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2) refers to tasks.o(.text.uxTaskGetStackHighWaterMark2) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.prvGetExpectedIdleTime) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime) refers to tasks.o(.text.prvGetExpectedIdleTime) for [Anonymous Symbol]
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.GPIODirModeSet), (8 bytes).
    Removing main.o(.text.GPIODirModeGet), (66 bytes).
    Removing main.o(.ARM.exidx.text.GPIODirModeGet), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntTypeSet), (8 bytes).
    Removing main.o(.text.GPIOIntTypeGet), (108 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntTypeGet), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPadConfigSet), (8 bytes).
    Removing main.o(.text.GPIOPadConfigGet), (320 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPadConfigGet), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntEnable), (8 bytes).
    Removing main.o(.text.GPIOIntDisable), (24 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntDisable), (8 bytes).
    Removing main.o(.text.GPIOIntStatus), (44 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntStatus), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntClear), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntRegister), (8 bytes).
    Removing main.o(.ARM.exidx.text._GPIOIntNumberGet), (8 bytes).
    Removing main.o(.text.GPIOIntUnregister), (30 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntUnregister), (8 bytes).
    Removing main.o(.text.GPIOIntRegisterPin), (44 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntRegisterPin), (8 bytes).
    Removing main.o(.text.GPIOIntUnregisterPin), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOIntUnregisterPin), (8 bytes).
    Removing main.o(.text.GPIOPinRead), (22 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinRead), (8 bytes).
    Removing main.o(.text.GPIOPinWrite), (30 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinWrite), (8 bytes).
    Removing main.o(.text.GPIOPinTypeADC), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeADC), (8 bytes).
    Removing main.o(.text.GPIOPinTypeCAN), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeCAN), (8 bytes).
    Removing main.o(.text.GPIOPinTypeComparator), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeComparator), (8 bytes).
    Removing main.o(.text.GPIOPinTypeComparatorOutput), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeComparatorOutput), (8 bytes).
    Removing main.o(.text.GPIOPinTypeDIVSCLK), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeDIVSCLK), (8 bytes).
    Removing main.o(.text.GPIOPinTypeEPI), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeEPI), (8 bytes).
    Removing main.o(.text.GPIOPinTypeEthernetLED), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeEthernetLED), (8 bytes).
    Removing main.o(.text.GPIOPinTypeEthernetMII), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeEthernetMII), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeGPIOInput), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeGPIOOutput), (8 bytes).
    Removing main.o(.text.GPIOPinTypeGPIOOutputOD), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeGPIOOutputOD), (8 bytes).
    Removing main.o(.text.GPIOPinTypeHibernateRTCCLK), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeHibernateRTCCLK), (8 bytes).
    Removing main.o(.text.GPIOPinTypeI2C), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeI2C), (8 bytes).
    Removing main.o(.text.GPIOPinTypeI2CSCL), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeI2CSCL), (8 bytes).
    Removing main.o(.text.GPIOPinTypeLCD), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeLCD), (8 bytes).
    Removing main.o(.text.GPIOPinTypeOneWire), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeOneWire), (8 bytes).
    Removing main.o(.text.GPIOPinTypePWM), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypePWM), (8 bytes).
    Removing main.o(.text.GPIOPinTypeQEI), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeQEI), (8 bytes).
    Removing main.o(.text.GPIOPinTypeSSI), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeSSI), (8 bytes).
    Removing main.o(.text.GPIOPinTypeTimer), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeTimer), (8 bytes).
    Removing main.o(.text.GPIOPinTypeTrace), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeTrace), (8 bytes).
    Removing main.o(.text.GPIOPinTypeUART), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeUART), (8 bytes).
    Removing main.o(.text.GPIOPinTypeUSBAnalog), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeUSBAnalog), (8 bytes).
    Removing main.o(.text.GPIOPinTypeUSBDigital), (40 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeUSBDigital), (8 bytes).
    Removing main.o(.text.GPIOPinTypeWakeHigh), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeWakeHigh), (8 bytes).
    Removing main.o(.text.GPIOPinTypeWakeLow), (42 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinTypeWakeLow), (8 bytes).
    Removing main.o(.text.GPIOPinWakeStatus), (14 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinWakeStatus), (8 bytes).
    Removing main.o(.text.GPIOPinConfigure), (108 bytes).
    Removing main.o(.ARM.exidx.text.GPIOPinConfigure), (8 bytes).
    Removing main.o(.text.GPIODMATriggerEnable), (28 bytes).
    Removing main.o(.ARM.exidx.text.GPIODMATriggerEnable), (8 bytes).
    Removing main.o(.text.GPIODMATriggerDisable), (28 bytes).
    Removing main.o(.ARM.exidx.text.GPIODMATriggerDisable), (8 bytes).
    Removing main.o(.text.GPIOADCTriggerEnable), (28 bytes).
    Removing main.o(.ARM.exidx.text.GPIOADCTriggerEnable), (8 bytes).
    Removing main.o(.text.GPIOADCTriggerDisable), (28 bytes).
    Removing main.o(.ARM.exidx.text.GPIOADCTriggerDisable), (8 bytes).
    Removing main.o(.ARM.exidx.text.delayMS), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.initStructs), (8 bytes).
    Removing main.o(.ARM.exidx.text.init), (8 bytes).
    Removing main.o(.ARM.exidx.text.CheckButtons), (8 bytes).
    Removing main.o(.ARM.exidx.text.jamHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.autoModeHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.moveWindow), (8 bytes).
    Removing main.o(.ARM.exidx.text.stopWindow), (8 bytes).
    Removing main.o(.ARM.exidx.text.limitSwitchHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.jamInterrupt), (8 bytes).
    Removing main.o(.ARM.exidx.text.autoModeInterrupt), (8 bytes).
    Removing main.o(.ARM.exidx.text.hasPermission), (8 bytes).
    Removing main.o(.ARM.exidx.text.checkAutoUp), (8 bytes).
    Removing main.o(.ARM.exidx.text.checkAutoDown), (8 bytes).
    Removing main.o(.rodata.g_pui32GPIOBaseAddrs), (144 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSuppressTicksAndSleep), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (74 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (628 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (444 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueueReceive), (476 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.prvCopyDataFromQueue), (66 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (318 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (340 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (278 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (110 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (378 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetHandle), (210 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetHandle), (8 bytes).
    Removing tasks.o(.text.prvSearchForNameWithinSingleList), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.prvSearchForNameWithinSingleList), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskGetIdleTaskHandle), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetIdleTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStepTick), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (270 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (362 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskConfirmSleepModeStatus), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark2), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark2), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (558 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvGetExpectedIdleTime), (8 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockGet), (340 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing sysctl.o(.constdata), (596 bytes).

398 unused section(s) (total 20158 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x000002a8   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x000002e4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000300   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x00000302   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x00000306   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000308   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000030a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000030c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000030c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000030c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000312   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000312   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000316   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000316   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000031e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000320   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000320   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000324   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000032c   Number         0  cpu.o(.emb_text)
    .emb_text                                0x0000032c   Section       38  cpu.o(.emb_text)
    $v0                                      0x00000354   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000354   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000468   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004f2   Section       16  aeabi_memset4.o(.text)
    .text                                    0x00000502   Section       68  rt_memclr.o(.text)
    .text                                    0x00000546   Section        0  heapauxi.o(.text)
    .text                                    0x0000054c   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x000005b0   Section       78  rt_memclr_w.o(.text)
    .text                                    0x000005fe   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x00000648   Section        0  exit.o(.text)
    .text                                    0x0000065c   Section        8  libspace.o(.text)
    .text                                    0x00000664   Section        0  sys_exit.o(.text)
    .text                                    0x00000670   Section        2  use_no_semi.o(.text)
    .text                                    0x00000672   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x00000674   Section        0  main.o(.text.CheckButtons)
    [Anonymous Symbol]                       0x000007e0   Section        0  main.o(.text.GPIODirModeSet)
    [Anonymous Symbol]                       0x00000854   Section        0  main.o(.text.GPIOIntClear)
    [Anonymous Symbol]                       0x00000868   Section        0  main.o(.text.GPIOIntEnable)
    [Anonymous Symbol]                       0x00000880   Section        0  main.o(.text.GPIOIntRegister)
    [Anonymous Symbol]                       0x000008a4   Section        0  main.o(.text.GPIOIntTypeSet)
    [Anonymous Symbol]                       0x0000097c   Section        0  main.o(.text.GPIOPadConfigSet)
    [Anonymous Symbol]                       0x00000c58   Section        0  main.o(.text.GPIOPinTypeGPIOInput)
    [Anonymous Symbol]                       0x00000c80   Section        0  main.o(.text.GPIOPinTypeGPIOOutput)
    [Anonymous Symbol]                       0x00000cb0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000d10   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000d20   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000d40   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000d44   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000d80   Section        0  system_tm4c123.o(.text.SystemInit)
    _GPIOIntNumberGet                        0x00000e8d   Thumb Code   132  main.o(.text._GPIOIntNumberGet)
    [Anonymous Symbol]                       0x00000e8c   Section        0  main.o(.text._GPIOIntNumberGet)
    [Anonymous Symbol]                       0x00000f10   Section        0  main.o(.text.autoModeHandler)
    [Anonymous Symbol]                       0x00000f3c   Section        0  main.o(.text.autoModeInterrupt)
    [Anonymous Symbol]                       0x00000f88   Section        0  main.o(.text.checkAutoDown)
    [Anonymous Symbol]                       0x00000fd0   Section        0  main.o(.text.checkAutoUp)
    [Anonymous Symbol]                       0x00001018   Section        0  main.o(.text.delayMS)
    [Anonymous Symbol]                       0x00001040   Section        0  tasks.o(.text.eTaskConfirmSleepModeStatus)
    [Anonymous Symbol]                       0x000010c0   Section        0  main.o(.text.hasPermission)
    [Anonymous Symbol]                       0x000010f8   Section        0  main.o(.text.init)
    [Anonymous Symbol]                       0x000012e4   Section        0  main.o(.text.initStructs)
    [Anonymous Symbol]                       0x00001350   Section        0  main.o(.text.jamHandler)
    [Anonymous Symbol]                       0x000013ac   Section        0  main.o(.text.jamInterrupt)
    [Anonymous Symbol]                       0x000013f8   Section        0  main.o(.text.limitSwitchHandler)
    [Anonymous Symbol]                       0x00001440   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x0000150c   Section        0  main.o(.text.moveWindow)
    prvAddCurrentTaskToDelayedList           0x00001711   Thumb Code   290  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00001710   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00001835   Thumb Code   340  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00001834   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x00001989   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001988   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataToQueue                       0x000019e5   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x000019e4   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x00001ab1   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00001ab0   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x00001ac9   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x00001ac8   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetExpectedIdleTime                   0x00001af1   Thumb Code   124  tasks.o(.text.prvGetExpectedIdleTime)
    [Anonymous Symbol]                       0x00001af0   Section        0  tasks.o(.text.prvGetExpectedIdleTime)
    prvHeapInit                              0x00001b6d   Thumb Code   174  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x00001b6c   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x00001c1d   Thumb Code   154  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001c1c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x00001cb9   Thumb Code    78  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x00001cb8   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00001d09   Thumb Code   292  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00001d08   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001e2d   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001e2c   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x00001ebd   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x00001ebc   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvIsQueueEmpty                          0x00001f85   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00001f84   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvNotifyQueueSetContainer               0x00001fad   Thumb Code   236  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00001fac   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00002099   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00002098   Section        0  port.o(.text.prvPortStartFirstTask)
    prvResetNextTaskUnblockTime              0x000020c1   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000020c0   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x000020fd   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x000020fc   Section        0  port.o(.text.prvTaskExitError)
    prvUnlockQueue                           0x00002149   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002148   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002214   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x000023dc   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00002408   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00002468   Section        0  main.o(.text.stopWindow)
    [Anonymous Symbol]                       0x00002484   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x000024cc   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x000024d8   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00002508   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002518   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x00002585   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002584   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002598   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x000025f0   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x0000263c   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x000026f8   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00002770   Section        0  port.o(.text.vPortSuppressTicksAndSleep)
    [Anonymous Symbol]                       0x00002990   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x00002a14   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00002a38   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00002a48   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00002a8c   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00002c10   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00002cb4   Section        0  tasks.o(.text.vTaskStepTick)
    [Anonymous Symbol]                       0x00002d80   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00002d90   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002d90   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002e50   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00002fa8   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00003044   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x0000314c   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x000032d0   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x000034e0   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x000035dc   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x0000367c   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x000036b4   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00003914   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00003a4c   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00003ba8   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00003d3c   Section        0  tasks.o(.text.xTaskResumeAll)
    i.IntEnable                              0x00003f60   Section        0  interrupt.o(i.IntEnable)
    i.IntMasterEnable                        0x00003fc4   Section        0  interrupt.o(i.IntMasterEnable)
    i.IntPrioritySet                         0x00003fd4   Section        0  interrupt.o(i.IntPrioritySet)
    i.IntRegister                            0x00003ffc   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlPeripheralEnable                 0x00004030   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x00004058   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    $v0                                      0x00004084   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00004084   Section       26  fpinit.o(x$fpl$fpinit)
    g_pui32Priority                          0x000040a0   Data          32  interrupt.o(.constdata)
    .constdata                               0x000040a0   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x000040c0   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x0000415c   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x00004170   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x00004184   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x00004198   Data          20  interrupt.o(.constdata)
    g_ppui32GPIOIntMapBlizzard               0x000041ac   Data         192  main.o(.rodata.g_ppui32GPIOIntMapBlizzard)
    [Anonymous Symbol]                       0x000041ac   Section        0  main.o(.rodata.g_ppui32GPIOIntMapBlizzard)
    g_ppui32GPIOIntMapSnowflake              0x0000426c   Data         216  main.o(.rodata.g_ppui32GPIOIntMapSnowflake)
    [Anonymous Symbol]                       0x0000426c   Section        0  main.o(.rodata.g_ppui32GPIOIntMapSnowflake)
    .L.str.2                                 0x00004344   Data          16  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004344   Section        0  main.o(.rodata.str1.1)
    .L.str.1                                 0x00004354   Data          11  main.o(.rodata.str1.1)
    .L.str                                   0x0000435f   Data          13  main.o(.rodata.str1.1)
    .L.str                                   0x0000436c   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000436c   Section        0  tasks.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    .bss                                     0x20000670   Section       96  libspace.o(.bss)
    CarWindow                                0x200006d0   Data           4  main.o(.bss.CarWindow)
    [Anonymous Symbol]                       0x200006d0   Section        0  main.o(.bss.CarWindow)
    PortC_Buttons                            0x200006d4   Data           8  main.o(.bss.PortC_Buttons)
    [Anonymous Symbol]                       0x200006d4   Section        0  main.o(.bss.PortC_Buttons)
    autoModeSemaphore                        0x200006dc   Data           4  main.o(.bss.autoModeSemaphore)
    [Anonymous Symbol]                       0x200006dc   Section        0  main.o(.bss.autoModeSemaphore)
    initStructs.driverDownButton             0x200006e0   Data           2  main.o(.bss.initStructs.driverDownButton)
    [Anonymous Symbol]                       0x200006e0   Section        0  main.o(.bss.initStructs.driverDownButton)
    initStructs.driverUpButton               0x200006e2   Data           2  main.o(.bss.initStructs.driverUpButton)
    [Anonymous Symbol]                       0x200006e2   Section        0  main.o(.bss.initStructs.driverUpButton)
    initStructs.passengerDownButton          0x200006e4   Data           2  main.o(.bss.initStructs.passengerDownButton)
    [Anonymous Symbol]                       0x200006e4   Section        0  main.o(.bss.initStructs.passengerDownButton)
    initStructs.passengerUpButton            0x200006e6   Data           2  main.o(.bss.initStructs.passengerUpButton)
    [Anonymous Symbol]                       0x200006e6   Section        0  main.o(.bss.initStructs.passengerUpButton)
    jamSemaphore                             0x200006e8   Data           4  main.o(.bss.jamSemaphore)
    [Anonymous Symbol]                       0x200006e8   Section        0  main.o(.bss.jamSemaphore)
    lockSemaphore                            0x200006ec   Data           4  main.o(.bss.lockSemaphore)
    [Anonymous Symbol]                       0x200006ec   Section        0  main.o(.bss.lockSemaphore)
    __tagsym$$used.1                         0x200006f0   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxDelayedTaskList                        0x200006f4   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200006f4   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x200006f8   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x200006f8   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200006fc   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200006fc   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x20000700   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000700   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000764   Data        4096  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000764   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20001764   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20001764   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20001768   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20001768   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    ulStoppedTimerCompensation               0x2000176c   Data           4  port.o(.bss.ulStoppedTimerCompensation)
    [Anonymous Symbol]                       0x2000176c   Section        0  port.o(.bss.ulStoppedTimerCompensation)
    ulTimerCountsForOneTick                  0x20001770   Data           4  port.o(.bss.ulTimerCountsForOneTick)
    [Anonymous Symbol]                       0x20001770   Section        0  port.o(.bss.ulTimerCountsForOneTick)
    uxCurrentNumberOfTasks                   0x20001774   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20001774   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20001778   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20001778   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x2000177c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2000177c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20001780   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20001780   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20001784   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20001784   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xDelayedTaskList1                        0x20001788   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20001788   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x2000179c   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x2000179c   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x200017b0   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x200017b0   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x200017b4   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200017b4   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMaximumPossibleSuppressedTicks          0x200017b8   Data           4  port.o(.bss.xMaximumPossibleSuppressedTicks)
    [Anonymous Symbol]                       0x200017b8   Section        0  port.o(.bss.xMaximumPossibleSuppressedTicks)
    xMinimumEverFreeBytesRemaining           0x200017bc   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x200017bc   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x200017c0   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200017c0   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200017c4   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200017c4   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x200017c8   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x200017c8   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x200017cc   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x200017cc   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x200017d0   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x200017d0   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x200017d4   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200017d4   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200017e8   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200017e8   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x200017ec   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x200017ec   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x200017f4   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x200017f4   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20001808   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20001808   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x2000181c   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x2000181c   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x20001820   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20001820   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20001828   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20001828   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20001828   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20001828   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20001a28   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x000002a9   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x000002a9   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x000002e5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000301   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000309   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000030d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000030d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000030d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000031f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000325   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    CPUcpsid                                 0x0000032d   Thumb Code     8  cpu.o(.emb_text)
    CPUprimask                               0x00000335   Thumb Code     6  cpu.o(.emb_text)
    CPUcpsie                                 0x0000033b   Thumb Code     8  cpu.o(.emb_text)
    CPUwfi                                   0x00000343   Thumb Code     4  cpu.o(.emb_text)
    CPUbasepriSet                            0x00000347   Thumb Code     6  cpu.o(.emb_text)
    CPUbasepriGet                            0x0000034d   Thumb Code     6  cpu.o(.emb_text)
    Reset_Handler                            0x00000355   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000003ab   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000041f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000421   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x00000423   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000425   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000427   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000429   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x0000042b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x0000042d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000042f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000431   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000433   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000435   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000437   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000439   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000043b   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x0000043d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000043f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000441   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000443   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000445   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000449   Thumb Code     0  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x00000469   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000469   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x000004cf   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x000004f3   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x000004f3   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x00000503   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x00000503   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x00000507   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x00000547   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000549   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0000054b   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x0000054d   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0000054d   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0000054d   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000595   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x000005b1   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x000005b1   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x000005b1   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x000005b5   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x000005ff   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x00000649   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x0000065d   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x0000065d   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x0000065d   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x00000665   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000671   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000671   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x00000673   Thumb Code     0  indicate_semi.o(.text)
    CheckButtons                             0x00000675   Thumb Code   362  main.o(.text.CheckButtons)
    GPIODirModeSet                           0x000007e1   Thumb Code   116  main.o(.text.GPIODirModeSet)
    GPIOIntClear                             0x00000855   Thumb Code    18  main.o(.text.GPIOIntClear)
    GPIOIntEnable                            0x00000869   Thumb Code    24  main.o(.text.GPIOIntEnable)
    GPIOIntRegister                          0x00000881   Thumb Code    34  main.o(.text.GPIOIntRegister)
    GPIOIntTypeSet                           0x000008a5   Thumb Code   214  main.o(.text.GPIOIntTypeSet)
    GPIOPadConfigSet                         0x0000097d   Thumb Code   730  main.o(.text.GPIOPadConfigSet)
    GPIOPinTypeGPIOInput                     0x00000c59   Thumb Code    40  main.o(.text.GPIOPinTypeGPIOInput)
    GPIOPinTypeGPIOOutput                    0x00000c81   Thumb Code    42  main.o(.text.GPIOPinTypeGPIOOutput)
    PendSV_Handler                           0x00000cb1   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000d21   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000d45   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000d81   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    autoModeHandler                          0x00000f11   Thumb Code    44  main.o(.text.autoModeHandler)
    autoModeInterrupt                        0x00000f3d   Thumb Code    76  main.o(.text.autoModeInterrupt)
    checkAutoDown                            0x00000f89   Thumb Code    70  main.o(.text.checkAutoDown)
    checkAutoUp                              0x00000fd1   Thumb Code    70  main.o(.text.checkAutoUp)
    delayMS                                  0x00001019   Thumb Code    38  main.o(.text.delayMS)
    eTaskConfirmSleepModeStatus              0x00001041   Thumb Code   128  tasks.o(.text.eTaskConfirmSleepModeStatus)
    hasPermission                            0x000010c1   Thumb Code    56  main.o(.text.hasPermission)
    init                                     0x000010f9   Thumb Code   490  main.o(.text.init)
    initStructs                              0x000012e5   Thumb Code   108  main.o(.text.initStructs)
    jamHandler                               0x00001351   Thumb Code    92  main.o(.text.jamHandler)
    jamInterrupt                             0x000013ad   Thumb Code    76  main.o(.text.jamInterrupt)
    limitSwitchHandler                       0x000013f9   Thumb Code    72  main.o(.text.limitSwitchHandler)
    main                                     0x00001441   Thumb Code   202  main.o(.text.main)
    moveWindow                               0x0000150d   Thumb Code   514  main.o(.text.moveWindow)
    pvPortMalloc                             0x00002215   Thumb Code   456  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x000023dd   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00002409   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    stopWindow                               0x00002469   Thumb Code    26  main.o(.text.stopWindow)
    uxListRemove                             0x00002485   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x000024cd   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vListInitialise                          0x000024d9   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00002509   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002519   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x00002599   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x000025f1   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x0000263d   Thumb Code   186  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x000026f9   Thumb Code   120  port.o(.text.vPortSetupTimerInterrupt)
    vPortSuppressTicksAndSleep               0x00002771   Thumb Code   544  port.o(.text.vPortSuppressTicksAndSleep)
    vPortValidateInterruptPriority           0x00002991   Thumb Code   132  port.o(.text.vPortValidateInterruptPriority)
    vTaskInternalSetTimeOutState             0x00002a15   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002a39   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002a49   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPriorityDisinheritAfterTimeout      0x00002a8d   Thumb Code   386  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00002c11   Thumb Code   162  tasks.o(.text.vTaskStartScheduler)
    vTaskStepTick                            0x00002cb5   Thumb Code   204  tasks.o(.text.vTaskStepTick)
    vTaskSuspendAll                          0x00002d81   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002d91   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00002e51   Thumb Code   342  port.o(.text.xPortStartScheduler)
    xQueueGenericCreate                      0x00002fa9   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00003045   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGiveFromISR                        0x0000314d   Thumb Code   386  queue.o(.text.xQueueGiveFromISR)
    xQueueSemaphoreTake                      0x000032d1   Thumb Code   528  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x000034e1   Thumb Code   252  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x000035dd   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x0000367d   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskIncrementTick                       0x000036b5   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00003915   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00003a4d   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00003ba9   Thumb Code   402  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00003d3d   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    IntEnable                                0x00003f61   Thumb Code    92  interrupt.o(i.IntEnable)
    IntMasterEnable                          0x00003fc5   Thumb Code    14  interrupt.o(i.IntMasterEnable)
    IntPrioritySet                           0x00003fd5   Thumb Code    36  interrupt.o(i.IntPrioritySet)
    IntRegister                              0x00003ffd   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlPeripheralEnable                   0x00004031   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x00004059   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    _fp_init                                 0x00004085   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x0000409d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x0000409d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x00004374   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00004378   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004398   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000670   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200006d0   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x200006f0   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000355

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00004a70, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00004418])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004398, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          152    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         1023  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         1194    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000003a   Code   RO         1192    !!dczerorl          c_w.l(__dczerorl.o)
    0x000002e2   0x000002e2   0x00000002   PAD
    0x000002e4   0x000002e4   0x0000001c   Code   RO         1196    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000300   0x00000300   0x00000002   Code   RO         1054    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000302   0x00000302   0x00000004   Code   RO         1060    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1063    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1065    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1068    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1070    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1072    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1075    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1077    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1079    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1081    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1083    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1085    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1087    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1089    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1091    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1093    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1095    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1099    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1101    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1103    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1105    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000002   Code   RO         1106    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000002   Code   RO         1128    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1143    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1145    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1148    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1151    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1153    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1156    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000002   Code   RO         1157    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1025    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1031    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000030c   0x0000030c   0x00000006   Code   RO         1043    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000312   0x00000312   0x00000000   Code   RO         1033    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000312   0x00000312   0x00000004   Code   RO         1034    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         1036    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000008   Code   RO         1037    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000031e   0x0000031e   0x00000002   Code   RO         1058    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000320   0x00000320   0x00000000   Code   RO         1108    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000320   0x00000320   0x00000004   Code   RO         1109    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000324   0x00000324   0x00000006   Code   RO         1110    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000032a   0x0000032a   0x00000002   PAD
    0x0000032c   0x0000032c   0x00000026   Code   RO         1001    .emb_text           driverlib.lib(cpu.o)
    0x00000352   0x00000352   0x00000002   PAD
    0x00000354   0x00000354   0x00000114   Code   RO          153  * .text               startup_tm4c123.o
    0x00000468   0x00000468   0x0000008a   Code   RO         1015    .text               c_w.l(rt_memcpy_v6.o)
    0x000004f2   0x000004f2   0x00000010   Code   RO         1017    .text               c_w.l(aeabi_memset4.o)
    0x00000502   0x00000502   0x00000044   Code   RO         1019    .text               c_w.l(rt_memclr.o)
    0x00000546   0x00000546   0x00000006   Code   RO         1021    .text               c_w.l(heapauxi.o)
    0x0000054c   0x0000054c   0x00000064   Code   RO         1026    .text               c_w.l(rt_memcpy_w.o)
    0x000005b0   0x000005b0   0x0000004e   Code   RO         1028    .text               c_w.l(rt_memclr_w.o)
    0x000005fe   0x000005fe   0x0000004a   Code   RO         1045    .text               c_w.l(sys_stackheap_outer.o)
    0x00000648   0x00000648   0x00000012   Code   RO         1047    .text               c_w.l(exit.o)
    0x0000065a   0x0000065a   0x00000002   PAD
    0x0000065c   0x0000065c   0x00000008   Code   RO         1055    .text               c_w.l(libspace.o)
    0x00000664   0x00000664   0x0000000c   Code   RO         1118    .text               c_w.l(sys_exit.o)
    0x00000670   0x00000670   0x00000002   Code   RO         1133    .text               c_w.l(use_no_semi.o)
    0x00000672   0x00000672   0x00000000   Code   RO         1135    .text               c_w.l(indicate_semi.o)
    0x00000672   0x00000672   0x00000002   PAD
    0x00000674   0x00000674   0x0000016a   Code   RO          108    .text.CheckButtons  main.o
    0x000007de   0x000007de   0x00000002   PAD
    0x000007e0   0x000007e0   0x00000074   Code   RO            2    .text.GPIODirModeSet  main.o
    0x00000854   0x00000854   0x00000012   Code   RO           20    .text.GPIOIntClear  main.o
    0x00000866   0x00000866   0x00000002   PAD
    0x00000868   0x00000868   0x00000018   Code   RO           14    .text.GPIOIntEnable  main.o
    0x00000880   0x00000880   0x00000022   Code   RO           22    .text.GPIOIntRegister  main.o
    0x000008a2   0x000008a2   0x00000002   PAD
    0x000008a4   0x000008a4   0x000000d6   Code   RO            6    .text.GPIOIntTypeSet  main.o
    0x0000097a   0x0000097a   0x00000002   PAD
    0x0000097c   0x0000097c   0x000002da   Code   RO           10    .text.GPIOPadConfigSet  main.o
    0x00000c56   0x00000c56   0x00000002   PAD
    0x00000c58   0x00000c58   0x00000028   Code   RO           52    .text.GPIOPinTypeGPIOInput  main.o
    0x00000c80   0x00000c80   0x0000002a   Code   RO           54    .text.GPIOPinTypeGPIOOutput  main.o
    0x00000caa   0x00000caa   0x00000006   PAD
    0x00000cb0   0x00000cb0   0x00000064   Code   RO          212    .text.PendSV_Handler  port.o
    0x00000d14   0x00000d14   0x0000000c   PAD
    0x00000d20   0x00000d20   0x00000024   Code   RO          196    .text.SVC_Handler   port.o
    0x00000d44   0x00000d44   0x0000003c   Code   RO          214    .text.SysTick_Handler  port.o
    0x00000d80   0x00000d80   0x0000010c   Code   RO          164    .text.SystemInit    system_tm4c123.o
    0x00000e8c   0x00000e8c   0x00000084   Code   RO           24    .text._GPIOIntNumberGet  main.o
    0x00000f10   0x00000f10   0x0000002c   Code   RO          112    .text.autoModeHandler  main.o
    0x00000f3c   0x00000f3c   0x0000004c   Code   RO          122    .text.autoModeInterrupt  main.o
    0x00000f88   0x00000f88   0x00000046   Code   RO          128    .text.checkAutoDown  main.o
    0x00000fce   0x00000fce   0x00000002   PAD
    0x00000fd0   0x00000fd0   0x00000046   Code   RO          126    .text.checkAutoUp   main.o
    0x00001016   0x00001016   0x00000002   PAD
    0x00001018   0x00001018   0x00000026   Code   RO          100    .text.delayMS       main.o
    0x0000103e   0x0000103e   0x00000002   PAD
    0x00001040   0x00001040   0x00000080   Code   RO          442    .text.eTaskConfirmSleepModeStatus  tasks.o
    0x000010c0   0x000010c0   0x00000038   Code   RO          124    .text.hasPermission  main.o
    0x000010f8   0x000010f8   0x000001ea   Code   RO          106    .text.init          main.o
    0x000012e2   0x000012e2   0x00000002   PAD
    0x000012e4   0x000012e4   0x0000006c   Code   RO          104    .text.initStructs   main.o
    0x00001350   0x00001350   0x0000005c   Code   RO          110    .text.jamHandler    main.o
    0x000013ac   0x000013ac   0x0000004c   Code   RO          120    .text.jamInterrupt  main.o
    0x000013f8   0x000013f8   0x00000048   Code   RO          118    .text.limitSwitchHandler  main.o
    0x00001440   0x00001440   0x000000ca   Code   RO          102    .text.main          main.o
    0x0000150a   0x0000150a   0x00000002   PAD
    0x0000150c   0x0000150c   0x00000202   Code   RO          114    .text.moveWindow    main.o
    0x0000170e   0x0000170e   0x00000002   PAD
    0x00001710   0x00001710   0x00000122   Code   RO          366    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001832   0x00001832   0x00000002   PAD
    0x00001834   0x00001834   0x00000154   Code   RO          354    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001988   0x00001988   0x0000005a   Code   RO          482    .text.prvCheckTasksWaitingTermination  tasks.o
    0x000019e2   0x000019e2   0x00000002   PAD
    0x000019e4   0x000019e4   0x000000cc   Code   RO          289    .text.prvCopyDataToQueue  queue.o
    0x00001ab0   0x00001ab0   0x00000018   Code   RO          360    .text.prvDeleteTCB  tasks.o
    0x00001ac8   0x00001ac8   0x00000026   Code   RO          307    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x00001aee   0x00001aee   0x00000002   PAD
    0x00001af0   0x00001af0   0x0000007c   Code   RO          484    .text.prvGetExpectedIdleTime  tasks.o
    0x00001b6c   0x00001b6c   0x000000ae   Code   RO          235    .text.prvHeapInit   heap_4.o
    0x00001c1a   0x00001c1a   0x00000002   PAD
    0x00001c1c   0x00001c1c   0x0000009a   Code   RO          392    .text.prvIdleTask   tasks.o
    0x00001cb6   0x00001cb6   0x00000002   PAD
    0x00001cb8   0x00001cb8   0x0000004e   Code   RO          269    .text.prvInitialiseNewQueue  queue.o
    0x00001d06   0x00001d06   0x00000002   PAD
    0x00001d08   0x00001d08   0x00000124   Code   RO          352    .text.prvInitialiseNewTask  tasks.o
    0x00001e2c   0x00001e2c   0x0000008e   Code   RO          480    .text.prvInitialiseTaskLists  tasks.o
    0x00001eba   0x00001eba   0x00000002   PAD
    0x00001ebc   0x00001ebc   0x000000c6   Code   RO          237    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x00001f82   0x00001f82   0x00000002   PAD
    0x00001f84   0x00001f84   0x00000028   Code   RO          305    .text.prvIsQueueEmpty  queue.o
    0x00001fac   0x00001fac   0x000000ec   Code   RO          291    .text.prvNotifyQueueSetContainer  queue.o
    0x00002098   0x00002098   0x00000028   Code   RO          204    .text.prvPortStartFirstTask  port.o
    0x000020c0   0x000020c0   0x0000003c   Code   RO          358    .text.prvResetNextTaskUnblockTime  tasks.o
    0x000020fc   0x000020fc   0x0000004c   Code   RO          194    .text.prvTaskExitError  port.o
    0x00002148   0x00002148   0x000000cc   Code   RO          295    .text.prvUnlockQueue  queue.o
    0x00002214   0x00002214   0x000001c8   Code   RO          233    .text.pvPortMalloc  heap_4.o
    0x000023dc   0x000023dc   0x0000002c   Code   RO          464    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00002408   0x00002408   0x0000005e   Code   RO          192    .text.pxPortInitialiseStack  port.o
    0x00002466   0x00002466   0x00000002   PAD
    0x00002468   0x00002468   0x0000001a   Code   RO          116    .text.stopWindow    main.o
    0x00002482   0x00002482   0x00000002   PAD
    0x00002484   0x00002484   0x00000048   Code   RO          183    .text.uxListRemove  list.o
    0x000024cc   0x000024cc   0x0000000c   Code   RO          402    .text.uxTaskGetNumberOfTasks  tasks.o
    0x000024d8   0x000024d8   0x0000002e   Code   RO          175    .text.vListInitialise  list.o
    0x00002506   0x00002506   0x00000002   PAD
    0x00002508   0x00002508   0x0000000e   Code   RO          177    .text.vListInitialiseItem  list.o
    0x00002516   0x00002516   0x00000002   PAD
    0x00002518   0x00002518   0x0000006a   Code   RO          181    .text.vListInsert   list.o
    0x00002582   0x00002582   0x00000002   PAD
    0x00002584   0x00002584   0x00000014   Code   RO          202    .text.vPortEnableVFP  port.o
    0x00002598   0x00002598   0x00000056   Code   RO          208    .text.vPortEnterCritical  port.o
    0x000025ee   0x000025ee   0x00000002   PAD
    0x000025f0   0x000025f0   0x0000004a   Code   RO          210    .text.vPortExitCritical  port.o
    0x0000263a   0x0000263a   0x00000002   PAD
    0x0000263c   0x0000263c   0x000000ba   Code   RO          239    .text.vPortFree     heap_4.o
    0x000026f6   0x000026f6   0x00000002   PAD
    0x000026f8   0x000026f8   0x00000078   Code   RO          200    .text.vPortSetupTimerInterrupt  port.o
    0x00002770   0x00002770   0x00000220   Code   RO          216    .text.vPortSuppressTicksAndSleep  port.o
    0x00002990   0x00002990   0x00000084   Code   RO          218    .text.vPortValidateInterruptPriority  port.o
    0x00002a14   0x00002a14   0x00000024   Code   RO          432    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00002a38   0x00002a38   0x0000000e   Code   RO          436    .text.vTaskMissedYield  tasks.o
    0x00002a46   0x00002a46   0x00000002   PAD
    0x00002a48   0x00002a48   0x00000042   Code   RO          422    .text.vTaskPlaceOnEventList  tasks.o
    0x00002a8a   0x00002a8a   0x00000002   PAD
    0x00002a8c   0x00002a8c   0x00000182   Code   RO          460    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00002c0e   0x00002c0e   0x00000002   PAD
    0x00002c10   0x00002c10   0x000000a2   Code   RO          390    .text.vTaskStartScheduler  tasks.o
    0x00002cb2   0x00002cb2   0x00000002   PAD
    0x00002cb4   0x00002cb4   0x000000cc   Code   RO          416    .text.vTaskStepTick  tasks.o
    0x00002d80   0x00002d80   0x00000010   Code   RO          364    .text.vTaskSuspendAll  tasks.o
    0x00002d90   0x00002d90   0x000000be   Code   RO          382    .text.vTaskSwitchContext  tasks.o
    0x00002e4e   0x00002e4e   0x00000002   PAD
    0x00002e50   0x00002e50   0x00000156   Code   RO          198    .text.xPortStartScheduler  port.o
    0x00002fa6   0x00002fa6   0x00000002   PAD
    0x00002fa8   0x00002fa8   0x0000009a   Code   RO          267    .text.xQueueGenericCreate  queue.o
    0x00003042   0x00003042   0x00000002   PAD
    0x00003044   0x00003044   0x00000108   Code   RO          265    .text.xQueueGenericReset  queue.o
    0x0000314c   0x0000314c   0x00000182   Code   RO          299    .text.xQueueGiveFromISR  queue.o
    0x000032ce   0x000032ce   0x00000002   PAD
    0x000032d0   0x000032d0   0x00000210   Code   RO          285    .text.xQueueSemaphoreTake  queue.o
    0x000034e0   0x000034e0   0x000000fc   Code   RO          434    .text.xTaskCheckForTimeOut  tasks.o
    0x000035dc   0x000035dc   0x000000a0   Code   RO          350    .text.xTaskCreate   tasks.o
    0x0000367c   0x0000367c   0x00000038   Code   RO          454    .text.xTaskGetSchedulerState  tasks.o
    0x000036b4   0x000036b4   0x00000260   Code   RO          396    .text.xTaskIncrementTick  tasks.o
    0x00003914   0x00003914   0x00000138   Code   RO          458    .text.xTaskPriorityDisinherit  tasks.o
    0x00003a4c   0x00003a4c   0x0000015c   Code   RO          456    .text.xTaskPriorityInherit  tasks.o
    0x00003ba8   0x00003ba8   0x00000192   Code   RO          426    .text.xTaskRemoveFromEventList  tasks.o
    0x00003d3a   0x00003d3a   0x00000002   PAD
    0x00003d3c   0x00003d3c   0x00000222   Code   RO          368    .text.xTaskResumeAll  tasks.o
    0x00003f5e   0x00003f5e   0x00000002   PAD
    0x00003f60   0x00003f60   0x00000064   Code   RO          516    i.IntEnable         driverlib.lib(interrupt.o)
    0x00003fc4   0x00003fc4   0x0000000e   Code   RO          519    i.IntMasterEnable   driverlib.lib(interrupt.o)
    0x00003fd2   0x00003fd2   0x00000002   PAD
    0x00003fd4   0x00003fd4   0x00000028   Code   RO          527    i.IntPrioritySet    driverlib.lib(interrupt.o)
    0x00003ffc   0x00003ffc   0x00000034   Code   RO          528    i.IntRegister       driverlib.lib(interrupt.o)
    0x00004030   0x00004030   0x00000028   Code   RO          684    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00004058   0x00004058   0x0000002c   Code   RO          688    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x00004084   0x00004084   0x0000001a   Code   RO         1116    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0000409e   0x0000409e   0x00000002   PAD
    0x000040a0   0x000040a0   0x0000010c   Data   RO          532    .constdata          driverlib.lib(interrupt.o)
    0x000041ac   0x000041ac   0x000000c0   Data   RO          141    .rodata.g_ppui32GPIOIntMapBlizzard  main.o
    0x0000426c   0x0000426c   0x000000d8   Data   RO          142    .rodata.g_ppui32GPIOIntMapSnowflake  main.o
    0x00004344   0x00004344   0x00000028   Data   RO          134    .rodata.str1.1      main.o
    0x0000436c   0x0000436c   0x00000005   Data   RO          502    .rodata.str1.1      tasks.o
    0x00004371   0x00004371   0x00000003   PAD
    0x00004374   0x00004374   0x00000004   Data   RO          487    .rodata.uxTopUsedPriority  tasks.o
    0x00004378   0x00004378   0x00000020   Data   RO         1191    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00004400, Size: 0x00001a28, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x00000018])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW          166    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   COMPRESSED   0x00000004   Data   RW          222    .data.uxCriticalNesting  port.o
    0x20000008   COMPRESSED   0x000003f8   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW          533    vtable              driverlib.lib(interrupt.o)
    0x2000066c   COMPRESSED   0x00000004   PAD
    0x20000670        -       0x00000060   Zero   RW         1056    .bss                c_w.l(libspace.o)
    0x200006d0        -       0x00000004   Zero   RW          135    .bss.CarWindow      main.o
    0x200006d4        -       0x00000008   Zero   RW          136    .bss.PortC_Buttons  main.o
    0x200006dc        -       0x00000004   Zero   RW          133    .bss.autoModeSemaphore  main.o
    0x200006e0        -       0x00000002   Zero   RW          138    .bss.initStructs.driverDownButton  main.o
    0x200006e2        -       0x00000002   Zero   RW          137    .bss.initStructs.driverUpButton  main.o
    0x200006e4        -       0x00000002   Zero   RW          140    .bss.initStructs.passengerDownButton  main.o
    0x200006e6        -       0x00000002   Zero   RW          139    .bss.initStructs.passengerUpButton  main.o
    0x200006e8        -       0x00000004   Zero   RW          132    .bss.jamSemaphore   main.o
    0x200006ec        -       0x00000004   Zero   RW          131    .bss.lockSemaphore  main.o
    0x200006f0        -       0x00000004   Zero   RW          486    .bss.pxCurrentTCB   tasks.o
    0x200006f4        -       0x00000004   Zero   RW          497    .bss.pxDelayedTaskList  tasks.o
    0x200006f8        -       0x00000004   Zero   RW          251    .bss.pxEnd          heap_4.o
    0x200006fc        -       0x00000004   Zero   RW          498    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000700        -       0x00000064   Zero   RW          488    .bss.pxReadyTasksLists  tasks.o
    0x20000764        -       0x00001000   Zero   RW          257    .bss.ucHeap         heap_4.o
    0x20001764        -       0x00000001   Zero   RW          220    .bss.ucMaxSysCallPriority  port.o
    0x20001765   COMPRESSED   0x00000003   PAD
    0x20001768        -       0x00000004   Zero   RW          221    .bss.ulMaxPRIGROUPValue  port.o
    0x2000176c        -       0x00000004   Zero   RW          225    .bss.ulStoppedTimerCompensation  port.o
    0x20001770        -       0x00000004   Zero   RW          224    .bss.ulTimerCountsForOneTick  port.o
    0x20001774        -       0x00000004   Zero   RW          493    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20001778        -       0x00000004   Zero   RW          492    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x2000177c        -       0x00000004   Zero   RW          495    .bss.uxSchedulerSuspended  tasks.o
    0x20001780        -       0x00000004   Zero   RW          490    .bss.uxTaskNumber   tasks.o
    0x20001784        -       0x00000004   Zero   RW          489    .bss.uxTopReadyPriority  tasks.o
    0x20001788        -       0x00000014   Zero   RW          507    .bss.xDelayedTaskList1  tasks.o
    0x2000179c        -       0x00000014   Zero   RW          508    .bss.xDelayedTaskList2  tasks.o
    0x200017b0        -       0x00000004   Zero   RW          252    .bss.xFreeBytesRemaining  heap_4.o
    0x200017b4        -       0x00000004   Zero   RW          503    .bss.xIdleTaskHandle  tasks.o
    0x200017b8        -       0x00000004   Zero   RW          223    .bss.xMaximumPossibleSuppressedTicks  port.o
    0x200017bc        -       0x00000004   Zero   RW          254    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x200017c0        -       0x00000004   Zero   RW          504    .bss.xNextTaskUnblockTime  tasks.o
    0x200017c4        -       0x00000004   Zero   RW          506    .bss.xNumOfOverflows  tasks.o
    0x200017c8        -       0x00000004   Zero   RW          255    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x200017cc        -       0x00000004   Zero   RW          256    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x200017d0        -       0x00000004   Zero   RW          505    .bss.xPendedTicks   tasks.o
    0x200017d4        -       0x00000014   Zero   RW          501    .bss.xPendingReadyList  tasks.o
    0x200017e8        -       0x00000004   Zero   RW          494    .bss.xSchedulerRunning  tasks.o
    0x200017ec        -       0x00000008   Zero   RW          253    .bss.xStart         heap_4.o
    0x200017f4        -       0x00000014   Zero   RW          499    .bss.xSuspendedTaskList  tasks.o
    0x20001808        -       0x00000014   Zero   RW          491    .bss.xTasksWaitingTermination  tasks.o
    0x2000181c        -       0x00000004   Zero   RW          496    .bss.xTickCount     tasks.o
    0x20001820        -       0x00000004   Zero   RW          500    .bss.xYieldPending  tasks.o
    0x20001824   COMPRESSED   0x00000004   PAD
    0x20001828        -       0x00000000   Zero   RW          151    HEAP                startup_tm4c123.o
    0x20001828        -       0x00000200   Zero   RW          150    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1014          0          0          0       4124       4641   heap_4.o
       238          0          0          0          0       2272   list.o
      3646          0        448          0         32      14013   main.o
      1724         16          0          4         17       4906   port.o
      2132          0          0          0          0      16639   queue.o
       276         24        620          0        512       5488   startup_tm4c123.o
       268          0          0          4          0       6720   system_tm4c123.o
      5458          0          9          0        260      26917   tasks.o

    ----------------------------------------------------------------------
     14848         52       1112       1024       4952      81596   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        92         12          3       1016          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        38          0          0          0          0        572   cpu.o
       206         20        268        620          0       7689   interrupt.o
        84          8          0          0          0       1021   sysctl.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      1076         44        268        620        100      10346   Library Totals
        14          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       708         16          0          0         96        948   c_w.l
       328         28        268        620          0       9282   driverlib.lib
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      1076         44        268        620        100      10346   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     15924         96       1380       1644       5052      91106   Grand Totals
     15924         96       1380         24       5052      91106   ELF Image Totals (compressed)
     15924         96       1380         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                17304 (  16.90kB)
    Total RW  Size (RW Data + ZI Data)              6696 (   6.54kB)
    Total ROM Size (Code + RO Data + RW Data)      17328 (  16.92kB)

==============================================================================

